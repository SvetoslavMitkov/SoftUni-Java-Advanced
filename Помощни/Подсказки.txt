shift + f6 - за преименуване едновременно на еднакви променливи

System.out.println(String.join(" ", array)); - за принтиране на всеки елемент от масив без нужда от цикъл. " " е сепаратор

split на повече от един интервал - .split("\\s+")

Прехвърляне на код към отделен метод
- маркиране кода
- alt + enter -> extract method

removeAll - inputList.removeAll(Arrays.asList(някакъв тип променлива))

!!!Да се внимава когато в цикъл се използва дължината на лист, защото при промяна на списъка
(добавяне или изваждане) СЕ ПРОМЕНЯ И ДЪЛЖИНАТА МУ.

StringBuilder str = new StringBuilder();
str.append(текст или променлива);
System.out.println(str.toString());

new DecimalFormat("0.###").format(числото);

за създаване на foreach за associative array
име на аррей.entrySet() и Alt + Enter -> итериране по всеки елемент

System.out.println(inputList.toString().replaceAll("[\\[\\],]",""));

map.values() -> връща списък с всички value на записите

някакъв текст.indexOf("друг текст") - проверява на кой индекс се намира даден стринг в друг
Ако няма такъв индекс връща -1, винаги връща int

сортиране на лист - Collections.sort(име на лист)

сортиране на мап по value от задача Race:
 List<String> sortedRacers = racersMap.entrySet().stream()
                .sorted(Map.Entry.comparingByValue(Comparator.reverseOrder()))
                .limit(3).map(Map.Entry::getKey).collect(Collectors.toList());

сортиране със стрийм - сортира по всеки два елемента
.stream().sorted((left, right) -> left(стойност) - right(стойност)    - ascending order - от най-малко към най-голямо
					-> right(стойност) - left(стойност)     - descending order - от най-голямо към най-малко
при изваждането ако резултата е >0 се разместват, ако не си остават
може да се използва и компаратор

Judge не приема stream().toList() - вместо това => stream().collect(Collectors.toList())